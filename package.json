{
  "name": "vscode-openai",
  "displayName": "vscode-openai",
  "description": "A vscode extension can significantly enhance your productivity and efficiency when developing complex software applications using OpenAI latest models",
  "version": "1.0.14",
  "publisher": "AndrewButson",
  "icon": "images/logo_128x128.png",
  "private": true,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/arbs-io/vscode-openai-docs.git"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/arbs-io"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Programming Languages",
    "Data Science",
    "Testing"
  ],
  "keywords": [
    "ai",
    "chatgpt",
    "codex",
    "copilot",
    "gpt",
    "gpt3",
    "gpt4",
    "openai",
    "azureopenai",
    "azure-openai",
    "azure",
    "testing"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "browser": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vscode-openai-sidebar-view",
          "title": "vscode-openai",
          "icon": "./assets/openai-sidebar.svg",
          "when": "vscode-openai.context.apikey"
        }
      ]
    },
    "views": {
      "vscode-openai-sidebar-view": [
        {
          "type": "webview",
          "id": "vscode-openai.sidebar.personaWebview",
          "name": "Persona",
          "icon": "./assets/openai-sidebar.svg",
          "contextualTitle": "vscode-openai personas",
          "when": "vscode-openai.context.apikey"
        },
        {
          "type": "webview",
          "id": "vscode-openai.sidebar.conversationsWebview",
          "name": "Conversations",
          "icon": "./assets/openai-sidebar.svg",
          "contextualTitle": "vscode-openai conversations",
          "when": "vscode-openai.context.apikey"
        }
      ]
    },
    "configuration": {
      "title": "vscode-openai",
      "properties": {
        "vscode-openai.serviceProvider": {
          "type": "string",
          "default": "OpenAI",
          "markdownDescription": "The service provider for OpenAI. If Microsoft Azure then instance name must be updated in `#vscode-openai.baseUrl#`.",
          "enum": [
            "OpenAI",
            "Azure-OpenAI"
          ],
          "enumDescriptions": [
            "Use OpenAI native service (https://api.openai.com)",
            "Use Azure OpenAI service (https://<instance-name>.openai.azure.com/openai)."
          ],
          "order": 1
        },
        "vscode-openai.authentication": {
          "type": "string",
          "default": "ApiKey",
          "markdownDescription": "The type of authentication used by the service.",
          "enum": [
            "ApiKey"
          ],
          "enumDescriptions": [
            "Use OpenAI API keys for authentication. Visit your API Keys page to retrieve the API key you'll use in your requests."
          ],
          "order": 2
        },
        "vscode-openai.baseUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "markdownDescription": "The base url for the OpenAI service dependencies on `#vscode-openai.serviceProvider#`.\n- `OpenAI` then default `https://api.openai.com/v1`\n- `Azure-OpenAI` then default `https://<instance-name>.openai.azure.com/openai`",
          "format": "url",
          "description": "Specifies the base url for the openai service.",
          "order": 3
        },
        "vscode-openai.defaultModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "Specifies the default openai model.",
          "order": 4
        },
        "vscode-openai.azureDeployment": {
          "type": "string",
          "default": "azure-deployment",
          "markdownDescription": "The name of the Azure deployment (model). Only applies when `#vscode-openai.serviceProvider#` is `Azure-OpenAI`.",
          "format": "url",
          "description": "Specifies the base url for the openai service.",
          "order": 5
        },
        "vscode-openai.azureApiVersion": {
          "type": "string",
          "default": "2023-03-15-preview",
          "markdownDescription": "The api version used by Azure deployment (model). Only applies when `#vscode-openai.serviceProvider#` is `Azure-OpenAI`.",
          "format": "url",
          "description": "Specifies the base url for the openai service.",
          "order": 6
        }
      }
    },
    "menus": {
      "editor/title": [
        {
          "submenu": "vscode-openai.menu.toolbox",
          "group": "navigation",
          "when": "editorTextFocus"
        }
      ],
      "vscode-openai.menu.toolbox": [
        {
          "command": "vscode-openai.completion.comment",
          "group": "navigation.openai_1",
          "when": "vscode-openai.context.apikey"
        },
        {
          "command": "vscode-openai.completion.explain",
          "group": "navigation.openai_1",
          "when": "vscode-openai.context.apikey"
        },
        {
          "command": "vscode-openai.completion.bounty",
          "group": "navigation.openai_1",
          "when": "vscode-openai.context.apikey"
        },
        {
          "command": "vscode-openai.completion.optimize",
          "group": "navigation.openai_1",
          "when": "vscode-openai.context.apikey"
        },
        {
          "command": "vscode-openai.completion.patterns",
          "group": "navigation.openai_1",
          "when": "vscode-openai.context.apikey"
        }
      ]
    },
    "submenus": [
      {
        "id": "vscode-openai.menu.toolbox",
        "label": "vscode-openai.menu.toolbox",
        "when": "editorTextFocus",
        "icon": {
          "light": "./assets/openai-light.png",
          "dark": "./assets/openai-dark.png"
        }
      }
    ],
    "commands": [
      {
        "command": "vscode-openai.register.defaultmodel",
        "title": "Default Model...",
        "category": "vscode-openai.register"
      },
      {
        "command": "vscode-openai.register.apikey",
        "title": "Register API Key...",
        "category": "vscode-openai.register",
        "icon": {
          "light": "./assets/openai-light.png",
          "dark": "./assets/openai-dark.png"
        }
      },
      {
        "command": "vscode-openai.completion.comment",
        "title": "Comments",
        "category": "vscode-openai.completion"
      },
      {
        "command": "vscode-openai.completion.explain",
        "title": "Explanation",
        "category": "vscode-openai.completion"
      },
      {
        "command": "vscode-openai.completion.bounty",
        "title": "Bug Bounty",
        "category": "vscode-openai.completion"
      },
      {
        "command": "vscode-openai.completion.optimize",
        "title": "Optimize",
        "category": "vscode-openai.completion"
      },
      {
        "command": "vscode-openai.completion.patterns",
        "title": "Design Patterns",
        "category": "vscode-openai.completion"
      }
    ]
  },
  "scripts": {
    "install:all": "npm install && npm run install:all:messageWebview && npm run install:all:personaWebview && npm run install:all:conversationsWebview",
    "install:all:messageWebview": "npm --prefix ./webview-ui/messageWebview install",
    "install:all:personaWebview": "npm --prefix ./webview-ui/personaWebview install",
    "install:all:conversationsWebview": "npm --prefix ./webview-ui/conversationsWebview install",
    "build:webview": "npm --prefix ./webview-ui/messageWebview run build && npm --prefix ./webview-ui/personaWebview run build && npm --prefix ./webview-ui/conversationsWebview run build",
    "build:webview:messageWebview": "npm --prefix ./webview-ui/messageWebview run build",
    "build:webview:personaWebview": "npm --prefix ./webview-ui/personaWebview run build",
    "build:webview:conversationsWebview": "npm --prefix ./webview-ui/conversationsWebview run build",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "watch": "npm run build:webview && tsc -watch -p ./",
    "deploy": "vsce publish --yarn"
  },
  "devDependencies": {
    "@types/node": "^18.11.18",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "@vscode/vsce": "^2.16.0",
    "esbuild": "^0.17.4",
    "eslint": "^8.32.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "openai": "^3.2.1"
  }
}
