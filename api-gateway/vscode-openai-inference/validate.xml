
<policies>
    <inbound>
        <base />
        <check-header name="Authorization" failed-check-httpcode="401" failed-check-error-message="Not authorized" ignore-case="false" />
        <return-response>
            <set-status code="200" reason="OK" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="Authorization" exists-action="override">
                <value>@{

                    var auth = context.Request.Headers.GetValueOrDefault("Authorization","");
                    auth = auth.Replace("Bearer ", "");
                    string[] tokens = auth.Split('.');

                    if (tokens.Length != 3)
                    {
                        return "False";
                    }


                    var signature = new HMACSHA256(Encoding.UTF8.GetBytes("{{hashing-secret}}")).ComputeHash(Encoding.UTF8.GetBytes($"{tokens[0]}.{tokens[1]}"));
                    var jwtSignatureBase64UrlEncoded = Convert.ToBase64String(signature).Replace("/", "_").Replace("+", "-"). Replace("=", "");

                    var isValid = jwtSignatureBase64UrlEncoded == tokens[2];

                    return $"{isValid}::{tokens[0]}.{tokens[1]}...{jwtSignatureBase64UrlEncoded}";
                }</value>
            </set-header>
            <set-body template="liquid">
            {
            "health_check": {
                "status": "OK"
                }
            }
            </set-body>
        </return-response>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>