name: VsixPackage

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm run install:all
      - run: npm run build:webview
      - name: Publish
        if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: npm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  generate-changelog:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          # semantic-release requires >= 10.18
          node-version: 12

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      # deletes node_modules, install dependencies, does NOT update lockfile
      - name: Install Dependencies
        run: npm ci

      - name: Semantic Release
        env:
          # Use nr-opensource-bot for authoring commits done by
          # semantic-release (rather than using @semantic-release-bot)
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ env.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.BOT_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
        run: npx semantic-release
